// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tnt-world.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace UniDortmund.FaProSS17P3G1.MapGenerator.Model {

  /// <summary>Holder for reflection information generated from tnt-world.proto</summary>
  public static partial class TntWorldReflection {

    #region Descriptor
    /// <summary>File descriptor for tnt-world.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TntWorldReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg90bnQtd29ybGQucHJvdG8SD2ZhcHJvLnRudC53b3JsZCL8BAoJV29ybGRJ",
            "bmZvEj8KCUdlbmVyYXRvchgKIAEoCzIsLmZhcHJvLnRudC53b3JsZC5Xb3Js",
            "ZEluZm8uR2VuZXJhdG9yU2V0dGluZ3MarQQKEUdlbmVyYXRvclNldHRpbmdz",
            "EgwKBFNlZWQYASABKAYSVwoOQmlvbWVHZW5lcmF0b3IYAiABKA4yPy5mYXBy",
            "by50bnQud29ybGQuV29ybGRJbmZvLkdlbmVyYXRvclNldHRpbmdzLkJpb21l",
            "R2VuZXJhdG9yVHlwZRJbChBEZW5zaXR5R2VuZXJhdG9yGAMgASgOMkEuZmFw",
            "cm8udG50LndvcmxkLldvcmxkSW5mby5HZW5lcmF0b3JTZXR0aW5ncy5EZW5z",
            "aXR5R2VuZXJhdG9yVHlwZRJbChBUZXJyYWluR2VuZXJhdG9yGAQgASgOMkEu",
            "ZmFwcm8udG50LndvcmxkLldvcmxkSW5mby5HZW5lcmF0b3JTZXR0aW5ncy5U",
            "ZXJyYWluR2VuZXJhdG9yVHlwZRJbChBEZXRhaWxzR2VuZXJhdG9yGAUgAygO",
            "MkEuZmFwcm8udG50LndvcmxkLldvcmxkSW5mby5HZW5lcmF0b3JTZXR0aW5n",
            "cy5EZXRhaWxzR2VuZXJhdG9yVHlwZSImChJCaW9tZUdlbmVyYXRvclR5cGUS",
            "EAoMVW5pZm9ybUdyYXNzEAAiJQoURGVuc2l0eUdlbmVyYXRvclR5cGUSDQoJ",
            "RmxhdFdvcmxkEAAiKQoUVGVycmFpbkdlbmVyYXRvclR5cGUSEQoNTWFpbkJs",
            "b2NrT25seRAAIiAKFERldGFpbHNHZW5lcmF0b3JUeXBlEggKBE5vbmUQACI6",
            "CgtXb3JsZENvbHVtbhIrCgZCbG9ja3MYASADKAsyGy5mYXByby50bnQud29y",
            "bGQuV29ybGRCbG9jayJECgpXb3JsZEJsb2NrEjYKDlBhcnRpY2xlRmllbGRz",
            "GAEgAygLMh4uZmFwcm8udG50LndvcmxkLlBhcnRpY2xlRmllbGQiOAoNUGFy",
            "dGljbGVGaWVsZBIMCgRUeXBlGAEgASgNEhkKEU51bWJlck9mUGFydGljbGVz",
            "GAIgASgNQi+qAixVbmlEb3J0bXVuZC5GYVByb1NTMTdQM0cxLk1hcEdlbmVy",
            "YXRvci5Nb2RlbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo), global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Parser, new[]{ "Generator" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings), global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Parser, new[]{ "Seed", "BiomeGenerator", "DensityGenerator", "TerrainGenerator", "DetailsGenerator" }, null, new[]{ typeof(global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.BiomeGeneratorType), typeof(global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.DensityGeneratorType), typeof(global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.TerrainGeneratorType), typeof(global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.DetailsGeneratorType) }, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldColumn), global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldColumn.Parser, new[]{ "Blocks" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldBlock), global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldBlock.Parser, new[]{ "ParticleFields" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.ParticleField), global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.ParticleField.Parser, new[]{ "Type", "NumberOfParticles" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class WorldInfo : pb::IMessage<WorldInfo> {
    private static readonly pb::MessageParser<WorldInfo> _parser = new pb::MessageParser<WorldInfo>(() => new WorldInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WorldInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.TntWorldReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldInfo(WorldInfo other) : this() {
      Generator = other.generator_ != null ? other.Generator.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldInfo Clone() {
      return new WorldInfo(this);
    }

    /// <summary>Field number for the "Generator" field.</summary>
    public const int GeneratorFieldNumber = 10;
    private global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings generator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings Generator {
      get { return generator_; }
      set {
        generator_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WorldInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WorldInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Generator, other.Generator)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (generator_ != null) hash ^= Generator.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (generator_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Generator);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (generator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Generator);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WorldInfo other) {
      if (other == null) {
        return;
      }
      if (other.generator_ != null) {
        if (generator_ == null) {
          generator_ = new global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings();
        }
        Generator.MergeFrom(other.Generator);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 82: {
            if (generator_ == null) {
              generator_ = new global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings();
            }
            input.ReadMessage(generator_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the WorldInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class GeneratorSettings : pb::IMessage<GeneratorSettings> {
        private static readonly pb::MessageParser<GeneratorSettings> _parser = new pb::MessageParser<GeneratorSettings>(() => new GeneratorSettings());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GeneratorSettings> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GeneratorSettings() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GeneratorSettings(GeneratorSettings other) : this() {
          seed_ = other.seed_;
          biomeGenerator_ = other.biomeGenerator_;
          densityGenerator_ = other.densityGenerator_;
          terrainGenerator_ = other.terrainGenerator_;
          detailsGenerator_ = other.detailsGenerator_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GeneratorSettings Clone() {
          return new GeneratorSettings(this);
        }

        /// <summary>Field number for the "Seed" field.</summary>
        public const int SeedFieldNumber = 1;
        private ulong seed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Seed {
          get { return seed_; }
          set {
            seed_ = value;
          }
        }

        /// <summary>Field number for the "BiomeGenerator" field.</summary>
        public const int BiomeGeneratorFieldNumber = 2;
        private global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.BiomeGeneratorType biomeGenerator_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.BiomeGeneratorType BiomeGenerator {
          get { return biomeGenerator_; }
          set {
            biomeGenerator_ = value;
          }
        }

        /// <summary>Field number for the "DensityGenerator" field.</summary>
        public const int DensityGeneratorFieldNumber = 3;
        private global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.DensityGeneratorType densityGenerator_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.DensityGeneratorType DensityGenerator {
          get { return densityGenerator_; }
          set {
            densityGenerator_ = value;
          }
        }

        /// <summary>Field number for the "TerrainGenerator" field.</summary>
        public const int TerrainGeneratorFieldNumber = 4;
        private global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.TerrainGeneratorType terrainGenerator_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.TerrainGeneratorType TerrainGenerator {
          get { return terrainGenerator_; }
          set {
            terrainGenerator_ = value;
          }
        }

        /// <summary>Field number for the "DetailsGenerator" field.</summary>
        public const int DetailsGeneratorFieldNumber = 5;
        private static readonly pb::FieldCodec<global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.DetailsGeneratorType> _repeated_detailsGenerator_codec
            = pb::FieldCodec.ForEnum(42, x => (int) x, x => (global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.DetailsGeneratorType) x);
        private readonly pbc::RepeatedField<global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.DetailsGeneratorType> detailsGenerator_ = new pbc::RepeatedField<global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.DetailsGeneratorType>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.DetailsGeneratorType> DetailsGenerator {
          get { return detailsGenerator_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GeneratorSettings);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GeneratorSettings other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Seed != other.Seed) return false;
          if (BiomeGenerator != other.BiomeGenerator) return false;
          if (DensityGenerator != other.DensityGenerator) return false;
          if (TerrainGenerator != other.TerrainGenerator) return false;
          if(!detailsGenerator_.Equals(other.detailsGenerator_)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Seed != 0UL) hash ^= Seed.GetHashCode();
          if (BiomeGenerator != 0) hash ^= BiomeGenerator.GetHashCode();
          if (DensityGenerator != 0) hash ^= DensityGenerator.GetHashCode();
          if (TerrainGenerator != 0) hash ^= TerrainGenerator.GetHashCode();
          hash ^= detailsGenerator_.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Seed != 0UL) {
            output.WriteRawTag(9);
            output.WriteFixed64(Seed);
          }
          if (BiomeGenerator != 0) {
            output.WriteRawTag(16);
            output.WriteEnum((int) BiomeGenerator);
          }
          if (DensityGenerator != 0) {
            output.WriteRawTag(24);
            output.WriteEnum((int) DensityGenerator);
          }
          if (TerrainGenerator != 0) {
            output.WriteRawTag(32);
            output.WriteEnum((int) TerrainGenerator);
          }
          detailsGenerator_.WriteTo(output, _repeated_detailsGenerator_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Seed != 0UL) {
            size += 1 + 8;
          }
          if (BiomeGenerator != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BiomeGenerator);
          }
          if (DensityGenerator != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DensityGenerator);
          }
          if (TerrainGenerator != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TerrainGenerator);
          }
          size += detailsGenerator_.CalculateSize(_repeated_detailsGenerator_codec);
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GeneratorSettings other) {
          if (other == null) {
            return;
          }
          if (other.Seed != 0UL) {
            Seed = other.Seed;
          }
          if (other.BiomeGenerator != 0) {
            BiomeGenerator = other.BiomeGenerator;
          }
          if (other.DensityGenerator != 0) {
            DensityGenerator = other.DensityGenerator;
          }
          if (other.TerrainGenerator != 0) {
            TerrainGenerator = other.TerrainGenerator;
          }
          detailsGenerator_.Add(other.detailsGenerator_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 9: {
                Seed = input.ReadFixed64();
                break;
              }
              case 16: {
                biomeGenerator_ = (global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.BiomeGeneratorType) input.ReadEnum();
                break;
              }
              case 24: {
                densityGenerator_ = (global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.DensityGeneratorType) input.ReadEnum();
                break;
              }
              case 32: {
                terrainGenerator_ = (global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldInfo.Types.GeneratorSettings.Types.TerrainGeneratorType) input.ReadEnum();
                break;
              }
              case 42:
              case 40: {
                detailsGenerator_.AddEntriesFrom(input, _repeated_detailsGenerator_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the GeneratorSettings message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum BiomeGeneratorType {
            [pbr::OriginalName("UniformGrass")] UniformGrass = 0,
          }

          public enum DensityGeneratorType {
            [pbr::OriginalName("FlatWorld")] FlatWorld = 0,
          }

          public enum TerrainGeneratorType {
            [pbr::OriginalName("MainBlockOnly")] MainBlockOnly = 0,
          }

          public enum DetailsGeneratorType {
            [pbr::OriginalName("None")] None = 0,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class WorldColumn : pb::IMessage<WorldColumn> {
    private static readonly pb::MessageParser<WorldColumn> _parser = new pb::MessageParser<WorldColumn>(() => new WorldColumn());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WorldColumn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.TntWorldReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldColumn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldColumn(WorldColumn other) : this() {
      blocks_ = other.blocks_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldColumn Clone() {
      return new WorldColumn(this);
    }

    /// <summary>Field number for the "Blocks" field.</summary>
    public const int BlocksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldBlock> _repeated_blocks_codec
        = pb::FieldCodec.ForMessage(10, global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldBlock.Parser);
    private readonly pbc::RepeatedField<global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldBlock> blocks_ = new pbc::RepeatedField<global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldBlock>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.WorldBlock> Blocks {
      get { return blocks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WorldColumn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WorldColumn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!blocks_.Equals(other.blocks_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= blocks_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      blocks_.WriteTo(output, _repeated_blocks_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += blocks_.CalculateSize(_repeated_blocks_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WorldColumn other) {
      if (other == null) {
        return;
      }
      blocks_.Add(other.blocks_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            blocks_.AddEntriesFrom(input, _repeated_blocks_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class WorldBlock : pb::IMessage<WorldBlock> {
    private static readonly pb::MessageParser<WorldBlock> _parser = new pb::MessageParser<WorldBlock>(() => new WorldBlock());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WorldBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.TntWorldReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldBlock(WorldBlock other) : this() {
      particleFields_ = other.particleFields_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldBlock Clone() {
      return new WorldBlock(this);
    }

    /// <summary>Field number for the "ParticleFields" field.</summary>
    public const int ParticleFieldsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.ParticleField> _repeated_particleFields_codec
        = pb::FieldCodec.ForMessage(10, global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.ParticleField.Parser);
    private readonly pbc::RepeatedField<global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.ParticleField> particleFields_ = new pbc::RepeatedField<global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.ParticleField>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.ParticleField> ParticleFields {
      get { return particleFields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WorldBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WorldBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!particleFields_.Equals(other.particleFields_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= particleFields_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      particleFields_.WriteTo(output, _repeated_particleFields_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += particleFields_.CalculateSize(_repeated_particleFields_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WorldBlock other) {
      if (other == null) {
        return;
      }
      particleFields_.Add(other.particleFields_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            particleFields_.AddEntriesFrom(input, _repeated_particleFields_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticleField : pb::IMessage<ParticleField> {
    private static readonly pb::MessageParser<ParticleField> _parser = new pb::MessageParser<ParticleField>(() => new ParticleField());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticleField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniDortmund.FaProSS17P3G1.MapGenerator.Model.TntWorldReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticleField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticleField(ParticleField other) : this() {
      type_ = other.type_;
      numberOfParticles_ = other.numberOfParticles_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticleField Clone() {
      return new ParticleField(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private uint type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "NumberOfParticles" field.</summary>
    public const int NumberOfParticlesFieldNumber = 2;
    private uint numberOfParticles_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NumberOfParticles {
      get { return numberOfParticles_; }
      set {
        numberOfParticles_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticleField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticleField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (NumberOfParticles != other.NumberOfParticles) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (NumberOfParticles != 0) hash ^= NumberOfParticles.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Type);
      }
      if (NumberOfParticles != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NumberOfParticles);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (NumberOfParticles != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumberOfParticles);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticleField other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.NumberOfParticles != 0) {
        NumberOfParticles = other.NumberOfParticles;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Type = input.ReadUInt32();
            break;
          }
          case 16: {
            NumberOfParticles = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
